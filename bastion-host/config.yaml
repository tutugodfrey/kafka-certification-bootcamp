apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-certification-cm
data:
  setup: |
    #! /bin/bash
    export DEBIAN_FRONTEND=noninteractive
    apt-get update && apt-get install -y lsb-release && apt-get clean all;
    apt update -y;
    apt install curl vim wget gpg tar git jq maven -y;
    apt install redis postgresql -y;
    
    apt update -y;
    apt install openjdk-11-jdk -y
    # apt install lsb-core netcat -y

    echo install clickhouse client
    apt install gnupg gnupg2 -y
    apt update && apt install -y apt-transport-https ca-certificates dirmngr
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 8919F6BD2B48D754
    echo "deb https://packages.clickhouse.com/deb stable main" | tee /etc/apt/sources.list.d/clickhouse.list
    apt update -y && apt install -y clickhouse-client

    echo Setup postgres client 15
    apt update -y;
    apt upgrade -y;
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -;
    echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | tee  /etc/apt/sources.list.d/pgdg.list;
    apt update -y;
    apt install postgresql-client-15 -y;
    export PATH=$PATH:/usr/lib/postgresql/15/bin;

    echo Setup kubectl
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
    apt-get update
    apt-get install -y kubectl
    # echo "export KUBECONFIG=/kube/kubeconfig" >> ~/.bashrc
    mkdir ~/.kube
    # cp /kube/kubeconfig ~/.kube/config
    apt-get install bash-completion -y
    echo 'source <(kubectl completion bash)' >> ~/.bashrc
    echo 'source /usr/share/bash-completion/bash_completion' >> ~/.bashrc
    source ~/.bashrc

    # install helm
    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    chmod 700 get_helm.sh
    ./get_helm.sh

    echo Install Kafka
    # Sometimes during installation, the version number from the source could change resulting in downloading of plain html 
    # Not found error page to ~/Downloads/kafka.tgz. Thus the installation will fail.
    # To get the current usable version go to https://downloads.apache.org/kafka/ and update the version 
    # in the command below
    #
    mkdir ~/Downloads
    curl "https://downloads.apache.org/kafka/3.8.0/kafka-3.8.0-src.tgz" -o ~/Downloads/kafka.tgz
    mkdir ~/kafka && cd ~/kafka
    tar -xvzf ~/Downloads/kafka.tgz --strip 1
    echo export PATH=$PATH:~/kafka/bin >> ~/.bashrc
    # /root/kafka/gradlew jar -PscalaVersion=2.13.12
    ./gradlew jar -PscalaVersion=2.13.14
    # apt-get install kafkacat

    # Install mongo shell
    # Install direction https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/#install-mongodb-community-edition-using-deb-packages
    curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor
    echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list
    apt-get update
    apt-get install -y mongodb-org

    # mssql 
    curl https://packages.microsoft.com/keys/microsoft.asc | tee /etc/apt/trusted.gpg.d/microsoft.asc
    curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | tee /etc/apt/sources.list.d/mssql-release.list
    apt update
    apt-get install mssql-tools18 unixodbc-dev -y
    echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bash_profile
    echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc

    # Conflient cli 
    mkdir -p /etc/apt/keyrings
    curl https://packages.confluent.io/confluent-cli/deb/archive.key | gpg --dearmor -o /etc/apt/keyrings/confluent-cli.gpg
    chmod go+r /etc/apt/keyrings/confluent-cli.gpg
    echo "deb [signed-by=/etc/apt/keyrings/confluent-cli.gpg] https://packages.confluent.io/confluent-cli/deb stable main" | tee /etc/apt/sources.list.d/confluent-cli.list >/dev/null
    apt update
    apt install confluent-cli

    # Install terraform
    apt-get update && apt-get install -y gnupg software-properties-common
    wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
    gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
    apt update
    apt-get install terraform
    terraform -install-autocomplete

    # Install AWS Cli
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    unzip awscliv2.zip
    ./aws/install




